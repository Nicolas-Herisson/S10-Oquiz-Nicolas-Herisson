DROP TABLE IF EXISTS "quiz_has_tag" CASCADE;
DROP TABLE IF EXISTS "answer" CASCADE;
DROP TABLE IF EXISTS "question" CASCADE;
DROP TABLE IF EXISTS "quiz" CASCADE;
DROP TABLE IF EXISTS "user" CASCADE;
DROP TABLE IF EXISTS "level" CASCADE;
DROP TABLE IF EXISTS "tag" CASCADE;

CREATE TABLE "level" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" VARCHAR(64) NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE "user" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "email" VARCHAR(255) NOT NULL,
  "password" VARCHAR(255) NOT NULL,
  "first_name" VARCHAR(255) NOT NULL,
  "last_name" VARCHAR(255) NOT NULL,
  "role" VARCHAR(255) NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE "quiz" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" VARCHAR(128) NOT NULL,
  "description" VARCHAR(512) NOT NULL,
  "id_user" INT NOT NULL REFERENCES "user"("id"),
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE "question" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" VARCHAR(64) NOT NULL,
  "anecdote" TEXT,
  "id_level" INT NOT NULL REFERENCES "level"("id"),
  "id_quiz" INT NOT NULL REFERENCES "quiz"("id"),
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE "answer" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "answer" VARCHAR(512) NOT NULL,
  "title" VARCHAR(128) NOT NULL,
  "is_valid" BOOLEAN NOT NULL DEFAULT false,
  "id_question" INT NOT NULL REFERENCES "question"("id"),
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);


CREATE TABLE "tag" (
  "id" integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" VARCHAR(128) NOT NULL,
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz
);

CREATE TABLE "quiz_has_tag" (
  "id_quiz" INT NOT NULL REFERENCES "quiz"("id"),
  "id_tag" INT NOT NULL REFERENCES "tag"("id"),
  "created_at" timestamptz NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamptz,
  UNIQUE ("id_quiz", "id_tag")
);
